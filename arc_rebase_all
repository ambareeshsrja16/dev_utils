#!/bin/bash

set -e

# Check for --nounit and --nolint arguments
skip_unit_and_lint=false
if [[ "$*" == *"nounit"* ]] && [[ "$*" == *"nolint"* ]]; then
  skip_unit_and_lint=true
fi

# Function for running arc diff with expect
execute_diff_with_autoreply() {
  arc_cmd=$1
  expect -c "spawn $arc_cmd; expect \"Provide explanation for skipping lint: \"; send \"linted\r\"; expect \"Provide explanation for skipping unit tests or press Enter to abort: \"; send \"tested\r\"; interact"
}

git rebase-stacked
if [ "x$1" != 'xlocal' ]; then
   arc diff --message=Rebase
fi

curr_br=$(git rev-parse --abbrev-ref HEAD)

if [ "x$rebase_upto" == "x$curr_br" ]; then
    echo "Reached rebase-target, stopping."
    exit 0
fi

# Handling the --update argument
if [[ "$*" == *"update"* ]]; then
  args=$(echo "$@" | sed 's/--update//g' | xargs)
  read -p 'Enter Diff ID for "arc diff --update": ' diff_ID
  arc_cmd="arc diff --update $diff_ID $args"
else
  arc_cmd="arc diff $*"
fi

# Running arc diff with the appropriate mode
if $skip_unit_and_lint ; then
  execute_diff_with_autoreply "$arc_cmd"
else
  eval $arc_cmd
fi

br=$(git first-downstream)
if [ "x$br" == "xnull" ]; then
  echo "Done"
else
  git co $br
  exec $0 "$@"
fi
